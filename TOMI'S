//****************** ECE319K_Lab1.s ***************
// Your solution to Lab 1 in assembly code
// Author: Tomi Alaofin
// Last Modified: 1/23/2024
// Spring 2024
        .data
        .align 2
// Declare global variables here if needed
// with the .space assembly directive
        .text
        .thumb
        .align 2
        .global EID
EID:    .string "TMA2427" // replace ZZZ123 with your EID here
        .align 2
        .global Phase
Phase:  .long 10 // 0 for info, 1-6 for debug, 10 for grade

        .global Lab1
// Input: R0 points to the list
// Return: R0 as specified in Lab 1 assignment and terminal window
// According to AAPCS, you must save/restore R4-R7
// If your function calls another function, you must save/restore LR
Lab1: PUSH {R4-R7,LR}
    MOVS R7, #0
RESTART:
    LDR R1, =EID // my eid
    LDR R6, [R0]
    CMP R6, #0 //edge case: if array is empty
    BEQ FAILED
    MOVS R4, #0
    MOVS R5, #0
INCREMENT:
    CMP R4, R5 // CHECKS IF THE ARRAY SIZE MATCH
    BNE NEXT
    LDRB R2, [R6, R4] //checking each letters in the first element
    LDRB R3, [R1, R5] //checking each characters in my eid
    ADDS R2, R2, R3
    CMP R2, #0 // Hasn't reahed end of array of compared EID
    BEQ CHECK
    LDRB R2, [R6, R4] //REPETITION TO FIX A BUG
    ADDS R4, R4, #1
    ADDS R5, R5, #1
    CMP R2, R3
    BEQ INCREMENT
// IF THE CHARACTERS ARE NOT THE SAME GO TO THE NEXT POINTER
NEXT:
    ADDS R7, R7, #1
// INSERT COUNTER HERE.
    ADDS R0, R0, #8 // INCREMENTS TO THE NEXT POINTER TO GRAB THE VALUE
    B RESTART
CHECK:
    CMP R4, R5
    BNE NEXT
    MOV R0, R7 // GRABS THE INDEX
    B FINISHED
FAILED:
    MOVS R0, #0
    SUBS R0, R0, #1
FINISHED:
      POP  {R4-R7,PC} // return
        .end
